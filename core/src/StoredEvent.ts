import { ObjectLiteral } from './utils';

/**
 * Holds the serialized DomainEvent. They are meant to be persisted
 * into the EventStore.
 */
export default abstract class StoredEvent<
  SerializedDomainEvent = ObjectLiteral
> {
  /**
   * Copy of the `eventId` in the DomainEvent metadata.
   * Each StoredEvent instance gets a unique sequence value usually autogenerated
   * by the database and set as its eventId.
   */
  public abstract readonly eventId: string;

  /**
   * Copy of the `eventType` in the DomainEvent metadata.
   */
  public abstract readonly eventType: string;

  /**
   * Copy of the `eventVersion` in the DomainEvent metadata.
   */
  public abstract readonly eventVersion: string | number;

  /**
   * Contains the serialization of the stored DomainEvent.
   * E.g. possible serialization to be used is JSON, or it could
   * just use another form.
   */
  public abstract readonly data: SerializedDomainEvent;

  /**
   * Copy of the `occurredOn` in the DomainEvent metadata.
   */
  public abstract readonly occurredOn: Date;
}
